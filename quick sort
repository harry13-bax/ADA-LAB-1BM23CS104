#include <stdio.h>
#include <time.h>
#include<stdlib.h>

void swap(int *x, int *y) {
    int c = *x;
    *x = *y;
    *y = c;
}

int partition(int a[], int st, int end) {
    int i = st + 1, j = end;
    int p = a[st];
    while (i <= j) {

        while (i <= end && a[i] <= p) i++;

        while (j > st && a[j] >= p) j--;


        if (i < j)
            swap(&a[i], &a[j]);
    }


    swap(&a[j], &a[st]);
    return j;
}

void quicksort(int a[], int st, int end) {
    if (st < end) {
        int p = partition(a, st, end);
        quicksort(a, st, p - 1);
        quicksort(a, p + 1, end);
    }
}

int main() {
    clock_t start, end;
    int n, i;

    printf("Enter the number of elements in the array:\n");
    scanf("%d", &n);
    int a[n];


    start = clock();

   for (i = 0; i < n; i++){
        printf("Enter:");
        scanf("%d",&a[i]);}
    quicksort(a, 0, n - 1);
    end = clock();
printf("Sorted array is:");
    for (i = 0; i < n; i++){
        printf("%d->",a[i]);}
    printf("Time taken for Quick Sort is %f seconds\n", (((double)(end - start)) / CLOCKS_PER_SEC));

    return 0;
}
